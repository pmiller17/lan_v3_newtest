
lan_v3_newtest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000022a  000002be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000002be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002be  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000002ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005d4  00000000  00000000  000003ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002b9  00000000  00000000  00000982  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000431  00000000  00000000  00000c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000158  00000000  00000000  0000106c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040f  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001be  00000000  00000000  000015d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00001791  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
}

void charge_battery(void)
{
	
	switch(charging_mode)
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	c5 c0       	rjmp	.+394    	; 0x190 <__vector_2>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
	{

		case CONSTANT_CURRENT:
			
			adc_read_ibatt();
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
			adc_read_vbatt();
  16:	df c0       	rjmp	.+446    	; 0x1d6 <__vector_11>
			current_offset = battery_current/32;
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d1 e0       	ldi	r29, 0x01	; 1
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	ac 36       	cpi	r26, 0x6C	; 108
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
			
			if(battery_current < 242)
  42:	a3 d0       	rcall	.+326    	; 0x18a <main>
  44:	f0 c0       	rjmp	.+480    	; 0x226 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <adc_read_vbatt>:
  48:	1b 98       	cbi	0x03, 3	; 3
  4a:	3c 9a       	sbi	0x07, 4	; 7
  4c:	3b 98       	cbi	0x07, 3	; 7
  4e:	3a 98       	cbi	0x07, 2	; 7
			{
				OCR1B++;
  50:	39 9a       	sbi	0x07, 1	; 7
  52:	38 9a       	sbi	0x07, 0	; 7
  54:	1e 98       	cbi	0x03, 6	; 3
  56:	36 9a       	sbi	0x06, 6	; 6
			}
			else if(battery_current > 245)
  58:	86 b1       	in	r24, 0x06	; 6
  5a:	36 9a       	sbi	0x06, 6	; 6
  5c:	86 b1       	in	r24, 0x06	; 6
  5e:	08 95       	ret

00000060 <adc_read_ibatt>:
  60:	1b 9a       	sbi	0x03, 3	; 3
  62:	3c 98       	cbi	0x07, 4	; 7
  64:	3b 98       	cbi	0x07, 3	; 7
			{
				OCR1B--;
  66:	3a 98       	cbi	0x07, 2	; 7
  68:	39 9a       	sbi	0x07, 1	; 7
  6a:	38 98       	cbi	0x07, 0	; 7
			}
		
			if(battery_current >= 242)
  6c:	1e 9a       	sbi	0x03, 6	; 3
  6e:	36 9a       	sbi	0x06, 6	; 6
  70:	86 b1       	in	r24, 0x06	; 6
  72:	36 9a       	sbi	0x06, 6	; 6
  74:	86 b1       	in	r24, 0x06	; 6
  76:	08 95       	ret

00000078 <setup>:
  78:	f8 94       	cli
			{			
				enough_bulk_current_counter++;
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	41 e0       	ldi	r20, 0x01	; 1
  80:	50 e0       	ldi	r21, 0x00	; 0
  82:	63 b5       	in	r22, 0x23	; 35
  84:	9a 01       	movw	r18, r20
  86:	08 2e       	mov	r0, r24
  88:	02 c0       	rjmp	.+4      	; 0x8e <setup+0x16>
  8a:	22 0f       	add	r18, r18
  8c:	33 1f       	adc	r19, r19
  8e:	0a 94       	dec	r0
  90:	e2 f7       	brpl	.-8      	; 0x8a <setup+0x12>
  92:	20 95       	com	r18
  94:	32 2f       	mov	r19, r18
  96:	36 23       	and	r19, r22
  98:	33 bd       	out	0x23, r19	; 35
  9a:	32 b5       	in	r19, 0x22	; 34
  9c:	23 23       	and	r18, r19
  9e:	22 bd       	out	0x22, r18	; 34
				if(enough_bulk_current_counter > 2000)
  a0:	01 96       	adiw	r24, 0x01	; 1
  a2:	88 30       	cpi	r24, 0x08	; 8
  a4:	91 05       	cpc	r25, r1
  a6:	69 f7       	brne	.-38     	; 0x82 <setup+0xa>
  a8:	89 b5       	in	r24, 0x29	; 41
				{
					bulk_charge_reached = TRUE;
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	89 bd       	out	0x29, r24	; 41
  ae:	09 b4       	in	r0, 0x29	; 41
  b0:	00 fe       	sbrs	r0, 0
  b2:	fd cf       	rjmp	.-6      	; 0xae <setup+0x36>
  b4:	89 b5       	in	r24, 0x29	; 41
				}
			}
		
			if((battery_current < 234) & (battery_current > 0))
  b6:	84 60       	ori	r24, 0x04	; 4
  b8:	89 bd       	out	0x29, r24	; 41
  ba:	80 e8       	ldi	r24, 0x80	; 128
  bc:	88 bd       	out	0x28, r24	; 40
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	88 bd       	out	0x28, r24	; 40
  c2:	b8 98       	cbi	0x17, 0	; 23
  c4:	c0 9a       	sbi	0x18, 0	; 24
  c6:	b9 9a       	sbi	0x17, 1	; 23
  c8:	c1 98       	cbi	0x18, 1	; 24
  ca:	bc 98       	cbi	0x17, 4	; 23
  cc:	c4 98       	cbi	0x18, 4	; 24
  ce:	bb 9a       	sbi	0x17, 3	; 23
  d0:	c3 98       	cbi	0x18, 3	; 24
  d2:	80 b7       	in	r24, 0x30	; 48
  d4:	8f 7d       	andi	r24, 0xDF	; 223
  d6:	80 bf       	out	0x30, r24	; 48
  d8:	80 b7       	in	r24, 0x30	; 48
  da:	8f 7e       	andi	r24, 0xEF	; 239
  dc:	80 bf       	out	0x30, r24	; 48
  de:	80 b7       	in	r24, 0x30	; 48
  e0:	81 60       	ori	r24, 0x01	; 1
			{
				enough_bulk_current_counter = 0;
  e2:	80 bf       	out	0x30, r24	; 48
  e4:	86 b5       	in	r24, 0x26	; 38
  e6:	8d 7f       	andi	r24, 0xFD	; 253
  e8:	86 bd       	out	0x26, r24	; 38
  ea:	86 b5       	in	r24, 0x26	; 38
  ec:	8e 7f       	andi	r24, 0xFE	; 254
  ee:	86 bd       	out	0x26, r24	; 38
  f0:	80 b7       	in	r24, 0x30	; 48
			}
			
			if(bulk_charge_reached == TRUE)
  f2:	8f 7d       	andi	r24, 0xDF	; 223
  f4:	80 bf       	out	0x30, r24	; 48
  f6:	8f b5       	in	r24, 0x2f	; 47
  f8:	87 7f       	andi	r24, 0xF7	; 247
  fa:	8f bd       	out	0x2f, r24	; 47
  fc:	8f b5       	in	r24, 0x2f	; 47
			{
				if(battery_voltage - current_offset > 220)
  fe:	8b 7f       	andi	r24, 0xFB	; 251
 100:	8f bd       	out	0x2f, r24	; 47
 102:	8f b5       	in	r24, 0x2f	; 47
 104:	8d 7f       	andi	r24, 0xFD	; 253
 106:	8f bd       	out	0x2f, r24	; 47
 108:	8f b5       	in	r24, 0x2f	; 47
 10a:	8e 7f       	andi	r24, 0xFE	; 254
 10c:	8f bd       	out	0x2f, r24	; 47
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	8b bd       	out	0x2b, r24	; 43
 112:	1c bc       	out	0x2c, r1	; 44
 114:	3f 98       	cbi	0x07, 7	; 7
 116:	3e 9a       	sbi	0x07, 6	; 7
				{
					overvoltage_thresh_count++;
 118:	3d 9a       	sbi	0x07, 5	; 7
 11a:	35 98       	cbi	0x06, 5	; 6
 11c:	37 9a       	sbi	0x06, 7	; 6
 11e:	33 9a       	sbi	0x06, 3	; 6
 120:	c1 9a       	sbi	0x18, 1	; 24
 122:	8b b7       	in	r24, 0x3b	; 59
 124:	80 62       	ori	r24, 0x20	; 32
 126:	8b bf       	out	0x3b, r24	; 59
 128:	8b b7       	in	r24, 0x3b	; 59
 12a:	80 61       	ori	r24, 0x10	; 16
 12c:	8b bf       	out	0x3b, r24	; 59
 12e:	82 b5       	in	r24, 0x22	; 34
 130:	81 60       	ori	r24, 0x01	; 1
 132:	82 bd       	out	0x22, r24	; 34
 134:	82 b5       	in	r24, 0x22	; 34
 136:	80 61       	ori	r24, 0x10	; 16
 138:	82 bd       	out	0x22, r24	; 34
 13a:	80 b7       	in	r24, 0x30	; 48
 13c:	80 62       	ori	r24, 0x20	; 32
				}
			
				if(battery_voltage - current_offset < 220)
 13e:	80 bf       	out	0x30, r24	; 48
 140:	8f b5       	in	r24, 0x2f	; 47
 142:	87 7f       	andi	r24, 0xF7	; 247
 144:	8f bd       	out	0x2f, r24	; 47
 146:	8f b5       	in	r24, 0x2f	; 47
 148:	8b 7f       	andi	r24, 0xFB	; 251
 14a:	8f bd       	out	0x2f, r24	; 47
 14c:	8f b5       	in	r24, 0x2f	; 47
 14e:	82 60       	ori	r24, 0x02	; 2
				{
					overvoltage_thresh_count = 0;
 150:	8f bd       	out	0x2f, r24	; 47
 152:	8f b5       	in	r24, 0x2f	; 47
 154:	81 60       	ori	r24, 0x01	; 1
 156:	8f bd       	out	0x2f, r24	; 47
 158:	10 92 63 00 	sts	0x0063, r1
 15c:	10 92 62 00 	sts	0x0062, r1
 160:	10 92 65 00 	sts	0x0065, r1
				}
			}
		
			if(overvoltage_thresh_count >= 2000)
 164:	10 92 64 00 	sts	0x0064, r1
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	80 93 6b 00 	sts	0x006B, r24
 16e:	78 94       	sei
 170:	08 95       	ret

00000172 <loop>:
 172:	80 91 6b 00 	lds	r24, 0x006B
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	11 f4       	brne	.+4      	; 0x17e <loop+0xc>
 17a:	72 df       	rcall	.-284    	; 0x60 <adc_read_ibatt>
 17c:	08 95       	ret
			{
				charging_mode = CONSTANT_VOLTAGE;
 17e:	80 91 6b 00 	lds	r24, 0x006B
 182:	81 11       	cpse	r24, r1
 184:	01 c0       	rjmp	.+2      	; 0x188 <loop+0x16>
			
		break;

		case CONSTANT_VOLTAGE:
			
			adc_read_vbatt();
 186:	60 df       	rcall	.-320    	; 0x48 <adc_read_vbatt>
			adc_read_ibatt();
 188:	08 95       	ret

0000018a <main>:
			current_offset = battery_current/32;
 18a:	76 df       	rcall	.-276    	; 0x78 <setup>
 18c:	f2 df       	rcall	.-28     	; 0x172 <loop>
 18e:	fe cf       	rjmp	.-4      	; 0x18c <main+0x2>

00000190 <__vector_2>:
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
 19e:	b4 9b       	sbis	0x16, 4	; 22
 1a0:	0b c0       	rjmp	.+22     	; 0x1b8 <__vector_2+0x28>
 1a2:	c1 98       	cbi	0x18, 1	; 24
 1a4:	82 b5       	in	r24, 0x22	; 34
 1a6:	8e 7f       	andi	r24, 0xFE	; 254
 1a8:	82 bd       	out	0x22, r24	; 34
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	90 93 61 00 	sts	0x0061, r25
 1b2:	80 93 60 00 	sts	0x0060, r24
			
			if(battery_voltage - current_offset > 220)
 1b6:	08 c0       	rjmp	.+16     	; 0x1c8 <__vector_2+0x38>
 1b8:	b4 99       	sbic	0x16, 4	; 22
 1ba:	06 c0       	rjmp	.+12     	; 0x1c8 <__vector_2+0x38>
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	90 93 61 00 	sts	0x0061, r25
 1c4:	80 93 60 00 	sts	0x0060, r24
			{
				OCR1B -= 1;
 1c8:	9f 91       	pop	r25
 1ca:	8f 91       	pop	r24
 1cc:	0f 90       	pop	r0
			}
		
			else if(battery_voltage - current_offset < 220)
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <__vector_11>:
 1d6:	1f 92       	push	r1
 1d8:	0f 92       	push	r0
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	0f 92       	push	r0
 1de:	11 24       	eor	r1, r1
 1e0:	8f 93       	push	r24
			{
				OCR1B += 3;
 1e2:	9f 93       	push	r25
 1e4:	f8 94       	cli
 1e6:	80 91 6b 00 	lds	r24, 0x006B
			}
		
			if(battery_voltage - current_offset < 208)
 1ea:	88 23       	and	r24, r24
 1ec:	59 f0       	breq	.+22     	; 0x204 <__vector_11+0x2e>
 1ee:	81 30       	cpi	r24, 0x01	; 1
 1f0:	91 f4       	brne	.+36     	; 0x216 <__vector_11+0x40>
 1f2:	85 b1       	in	r24, 0x05	; 5
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	90 93 63 00 	sts	0x0063, r25
 1fa:	80 93 62 00 	sts	0x0062, r24
 1fe:	10 92 6b 00 	sts	0x006B, r1
			{
				not_enough_volts++;
 202:	09 c0       	rjmp	.+18     	; 0x216 <__vector_11+0x40>
 204:	85 b1       	in	r24, 0x05	; 5
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	90 93 65 00 	sts	0x0065, r25
 20c:	80 93 64 00 	sts	0x0064, r24
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	80 93 6b 00 	sts	0x006B, r24
 216:	78 94       	sei
 218:	9f 91       	pop	r25
 21a:	8f 91       	pop	r24
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <_exit>:
 226:	f8 94       	cli

00000228 <__stop_program>:
				if(not_enough_volts >= 1000)
 228:	ff cf       	rjmp	.-2      	; 0x228 <__stop_program>
